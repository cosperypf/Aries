function(ShowItem name value)
  set(title "${name}:")
  string(LENGTH "${title}" len)
  math(EXPR len "25 - ${len}")
  if(len GREATER 0)
    string(REPEAT " " ${len} _pad)
    string(APPEND title "${_pad}")
  endif()

  message(STATUS "${title} ${value}")
endfunction()

function(ShowTarget target)
  if (NOT TARGET ${target})
    ShowItem("${target}" "NO")
    return()
  endif()
  get_target_property(LINK_LIBRARIES ${target} LINK_LIBRARIES)
  get_target_property(INCLUDE_DIRECTORIES ${target} INCLUDE_DIRECTORIES)
  get_target_property(INTERFACE_LINK_LIBRARIES ${target} INTERFACE_LINK_LIBRARIES)
  get_target_property(INTERFACE_INCLUDE_DIRECTORIES ${target} INTERFACE_INCLUDE_DIRECTORIES)
  if(LINK_LIBRARIES)
    set(CONTENT ${LINK_LIBRARIES})
  elseif (INCLUDE_DIRECTORIES)
    set(CONTENT ${INCLUDE_DIRECTORIES})
  elseif (INTERFACE_INCLUDE_DIRECTORIES)
    set(CONTENT ${INTERFACE_INCLUDE_DIRECTORIES})
  elseif (INTERFACE_LINK_LIBRARIES)
    set(CONTENT ${INTERFACE_LINK_LIBRARIES})
  else()
    set(CONTENT "Yes")
  endif()
  ShowItem("${target}" "${CONTENT}")
endfunction()

function(ShowDep dep)
  set(CONDITION OFF)
  if (NOT ARGN)
    set(CONDITION ON)
  elseif (${ARGN})
    set(CONDITION ON)
  endif()
  if (NOT ${CONDITION})
    ShowItem("${dep}" "Disabled")
  else()
    ShowTarget(${dep})
  endif()
endfunction()

function(ShowSummary)
  message("")
  message("===== Juglans Build Summary =====")
  ShowItem("CMake Version" ${CMAKE_VERSION})
  if (CMAKE_CROSSCOMPILING)
    ShowItem("Host Platform" ${CMAKE_HOST_SYSTEM})
    ShowItem("Cross-compile Target" ${CMAKE_SYSTEM})
  else()
    ShowItem("Target Platform" ${CMAKE_HOST_SYSTEM})
  endif()
  ShowItem("CMake Generator" ${CMAKE_GENERATOR})
  ShowItem("C++ Compiler" "${CMAKE_CXX_COMPILER_ID}-${CMAKE_CXX_COMPILER_VERSION} ${CMAKE_CXX_COMPILER}")
  if (CMAKE_BUILD_TYPE)
    ShowItem("Build Type" ${CMAKE_BUILD_TYPE})
  else()
    ShowItem("Build Types" ${CMAKE_CONFIGURATION_TYPES})
  endif()
  ShowItem("Enable Optimization" ${ENABLE_OPTIMIZATION})

  message("===== Dependency =====")
  ShowDep(CLI11 BUILD_TOOL)
  ShowDep(spdlog)

  message("===== Module =====")
  get_property(JUGLANS_MODULE_LIST GLOBAL PROPERTY JUGLANS_MODULE_LIST)
  foreach(module ${JUGLANS_MODULE_LIST})
    ShowTarget(juglans_${module})
  endforeach()

  if (BUILD_TEST)
    message("===== Test =====")
    foreach(module ${JUGLANS_MODULE_LIST})
      if (TARGET ${module}_test)
        ShowTarget(${module}_test)
      endif()
    endforeach()
  endif()

  if (BUILD_TOOL)
    message("===== Tool =====")
    get_property(JUGLANS_TOOL_LIST GLOBAL PROPERTY JUGLANS_TOOL_LIST)
    foreach(tool ${JUGLANS_TOOL_LIST})
      ShowTarget(${tool})
    endforeach()
  endif()

  message("")
endfunction()

set_property(GLOBAL PROPERTY JUGLANS_MODULE_LIST)
set_property(GLOBAL PROPERTY JUGLANS_TOOL_LIST)
